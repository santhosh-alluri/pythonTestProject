{
  "uid" : "7f699c3b29ccbcea",
  "name" : "test_company_overview_invalid_symbol",
  "fullName" : "Tests.test_company_overview.Test_CompanyOverview#test_company_overview_invalid_symbol",
  "historyId" : "b29ea84554df35292177d7ba709479a0",
  "time" : {
    "start" : 1611669587559,
    "stop" : 1611669588571,
    "duration" : 1012
  },
  "status" : "failed",
  "statusMessage" : "AssertionError: ++++ soft assert failure details follow below ++++\n\n++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++\nThe following failure was found in \"test_company_overview_invalid_symbol\" (test_company_overview.Test_CompanyOverview):\n+----------------------+----------------------+----------------------+\nTraceback (most recent call last):\n  File \"/home/san/PycharmProjects/pythonTestProject/Lib/Assertions.py\", line 9, in assert_equal\n    self.soft_assert(self.assertEqual, actual, expected,\n  File \"/home/san/PycharmProjects/pythonTestProject/Tests/test_company_overview.py\", line 49, in test_company_overview_invalid_symbol\n    self.assertion.assert_equal(response_json,\n  File \"/home/san/.local/lib/python3.8/site-packages/softest/case.py\", line 62, in soft_assert\n    assert_method(*arguments, **keywords)\n  File \"/usr/lib/python3.8/unittest/case.py\", line 912, in assertEqual\n    assertion_func(first, second, msg=msg)\n  File \"/usr/lib/python3.8/unittest/case.py\", line 1211, in assertDictEqual\n    self.fail(self._formatMessage(msg, standardMsg))\n  File \"/usr/lib/python3.8/unittest/case.py\", line 753, in fail\n    raise self.failureException(msg)\nAssertionError: {'Note': 'Thank you for using Alpha Vantag[183 chars]cy.'} != {}\n+ {}\n- {'Note': 'Thank you for using Alpha Vantage! Our standard API call frequency '\n-          'is 5 calls per minute and 500 calls per day. Please visit '\n-          'https://www.alphavantage.co/premium/ if you would like to target a '\n-          'higher API call frequency.'} : response not meeted expected error{\"Note\": \"Thank you for using Alpha Vantage! Our standard API call frequency is 5 calls per minute and 500 calls per day. Please visit https://www.alphavantage.co/premium/ if you would like to target a higher API call frequency.\"}\n\n-+ [1/1] +-",
  "statusTrace" : "self = <test_company_overview.Test_CompanyOverview testMethod=test_company_overview_invalid_symbol>\n\n    def test_company_overview_invalid_symbol(self):\n        self.logger.info(\"test_time_series_daily_invalid_symbol started\")\n        url = self.base_url+\"function=OVERVIEW&symbol=invalid&apikey=\"+self.apiKey\n        self.logger.info(\"url : \" + url)\n        response = requests.get(url)\n        response_json = response.json()\n        self.logger.info(\"response : \" + response.text)\n        # response assertion\n        self.assertion.assert_equal(response_json,\n                         {},\n                         \"response not meeted expected error\" +json.dumps(response_json))\n        self.logger.info(\"test_time_series_daily_invalid_symbol ended\")\n>       self.assert_all()\n\nTests/test_company_overview.py:53: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n../../.local/lib/python3.8/site-packages/softest/case.py:139: in assert_all\n    self.fail(''.join(failure_output))\nE   AssertionError: ++++ soft assert failure details follow below ++++\nE   \nE   ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++\nE   The following failure was found in \"test_company_overview_invalid_symbol\" (test_company_overview.Test_CompanyOverview):\nE   +----------------------+----------------------+----------------------+\nE   Traceback (most recent call last):\nE     File \"/home/san/PycharmProjects/pythonTestProject/Lib/Assertions.py\", line 9, in assert_equal\nE       self.soft_assert(self.assertEqual, actual, expected,\nE     File \"/home/san/PycharmProjects/pythonTestProject/Tests/test_company_overview.py\", line 49, in test_company_overview_invalid_symbol\nE       self.assertion.assert_equal(response_json,\nE     File \"/home/san/.local/lib/python3.8/site-packages/softest/case.py\", line 62, in soft_assert\nE       assert_method(*arguments, **keywords)\nE     File \"/usr/lib/python3.8/unittest/case.py\", line 912, in assertEqual\nE       assertion_func(first, second, msg=msg)\nE     File \"/usr/lib/python3.8/unittest/case.py\", line 1211, in assertDictEqual\nE       self.fail(self._formatMessage(msg, standardMsg))\nE     File \"/usr/lib/python3.8/unittest/case.py\", line 753, in fail\nE       raise self.failureException(msg)\nE   AssertionError: {'Note': 'Thank you for using Alpha Vantag[183 chars]cy.'} != {}\nE   + {}\nE   - {'Note': 'Thank you for using Alpha Vantage! Our standard API call frequency '\nE   -          'is 5 calls per minute and 500 calls per day. Please visit '\nE   -          'https://www.alphavantage.co/premium/ if you would like to target a '\nE   -          'higher API call frequency.'} : response not meeted expected error{\"Note\": \"Thank you for using Alpha Vantage! Our standard API call frequency is 5 calls per minute and 500 calls per day. Please visit https://www.alphavantage.co/premium/ if you would like to target a higher API call frequency.\"}\nE   \nE   -+ [1/1] +-",
  "flaky" : false,
  "newFailed" : false,
  "beforeStages" : [ {
    "name" : "unittest_setUpClass_fixture_Test_CompanyOverview",
    "time" : {
      "start" : 1611669586407,
      "stop" : 1611669586407,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  } ],
  "testStage" : {
    "status" : "failed",
    "statusMessage" : "AssertionError: ++++ soft assert failure details follow below ++++\n\n++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++\nThe following failure was found in \"test_company_overview_invalid_symbol\" (test_company_overview.Test_CompanyOverview):\n+----------------------+----------------------+----------------------+\nTraceback (most recent call last):\n  File \"/home/san/PycharmProjects/pythonTestProject/Lib/Assertions.py\", line 9, in assert_equal\n    self.soft_assert(self.assertEqual, actual, expected,\n  File \"/home/san/PycharmProjects/pythonTestProject/Tests/test_company_overview.py\", line 49, in test_company_overview_invalid_symbol\n    self.assertion.assert_equal(response_json,\n  File \"/home/san/.local/lib/python3.8/site-packages/softest/case.py\", line 62, in soft_assert\n    assert_method(*arguments, **keywords)\n  File \"/usr/lib/python3.8/unittest/case.py\", line 912, in assertEqual\n    assertion_func(first, second, msg=msg)\n  File \"/usr/lib/python3.8/unittest/case.py\", line 1211, in assertDictEqual\n    self.fail(self._formatMessage(msg, standardMsg))\n  File \"/usr/lib/python3.8/unittest/case.py\", line 753, in fail\n    raise self.failureException(msg)\nAssertionError: {'Note': 'Thank you for using Alpha Vantag[183 chars]cy.'} != {}\n+ {}\n- {'Note': 'Thank you for using Alpha Vantage! Our standard API call frequency '\n-          'is 5 calls per minute and 500 calls per day. Please visit '\n-          'https://www.alphavantage.co/premium/ if you would like to target a '\n-          'higher API call frequency.'} : response not meeted expected error{\"Note\": \"Thank you for using Alpha Vantage! Our standard API call frequency is 5 calls per minute and 500 calls per day. Please visit https://www.alphavantage.co/premium/ if you would like to target a higher API call frequency.\"}\n\n-+ [1/1] +-",
    "statusTrace" : "self = <test_company_overview.Test_CompanyOverview testMethod=test_company_overview_invalid_symbol>\n\n    def test_company_overview_invalid_symbol(self):\n        self.logger.info(\"test_time_series_daily_invalid_symbol started\")\n        url = self.base_url+\"function=OVERVIEW&symbol=invalid&apikey=\"+self.apiKey\n        self.logger.info(\"url : \" + url)\n        response = requests.get(url)\n        response_json = response.json()\n        self.logger.info(\"response : \" + response.text)\n        # response assertion\n        self.assertion.assert_equal(response_json,\n                         {},\n                         \"response not meeted expected error\" +json.dumps(response_json))\n        self.logger.info(\"test_time_series_daily_invalid_symbol ended\")\n>       self.assert_all()\n\nTests/test_company_overview.py:53: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n../../.local/lib/python3.8/site-packages/softest/case.py:139: in assert_all\n    self.fail(''.join(failure_output))\nE   AssertionError: ++++ soft assert failure details follow below ++++\nE   \nE   ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++\nE   The following failure was found in \"test_company_overview_invalid_symbol\" (test_company_overview.Test_CompanyOverview):\nE   +----------------------+----------------------+----------------------+\nE   Traceback (most recent call last):\nE     File \"/home/san/PycharmProjects/pythonTestProject/Lib/Assertions.py\", line 9, in assert_equal\nE       self.soft_assert(self.assertEqual, actual, expected,\nE     File \"/home/san/PycharmProjects/pythonTestProject/Tests/test_company_overview.py\", line 49, in test_company_overview_invalid_symbol\nE       self.assertion.assert_equal(response_json,\nE     File \"/home/san/.local/lib/python3.8/site-packages/softest/case.py\", line 62, in soft_assert\nE       assert_method(*arguments, **keywords)\nE     File \"/usr/lib/python3.8/unittest/case.py\", line 912, in assertEqual\nE       assertion_func(first, second, msg=msg)\nE     File \"/usr/lib/python3.8/unittest/case.py\", line 1211, in assertDictEqual\nE       self.fail(self._formatMessage(msg, standardMsg))\nE     File \"/usr/lib/python3.8/unittest/case.py\", line 753, in fail\nE       raise self.failureException(msg)\nE   AssertionError: {'Note': 'Thank you for using Alpha Vantag[183 chars]cy.'} != {}\nE   + {}\nE   - {'Note': 'Thank you for using Alpha Vantage! Our standard API call frequency '\nE   -          'is 5 calls per minute and 500 calls per day. Please visit '\nE   -          'https://www.alphavantage.co/premium/ if you would like to target a '\nE   -          'higher API call frequency.'} : response not meeted expected error{\"Note\": \"Thank you for using Alpha Vantage! Our standard API call frequency is 5 calls per minute and 500 calls per day. Please visit https://www.alphavantage.co/premium/ if you would like to target a higher API call frequency.\"}\nE   \nE   -+ [1/1] +-",
    "steps" : [ ],
    "attachments" : [ {
      "uid" : "4963c220f5c45912",
      "name" : "log",
      "source" : "4963c220f5c45912.txt",
      "type" : "text/plain",
      "size" : 638
    } ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 1,
    "shouldDisplayMessage" : true,
    "hasContent" : true
  },
  "afterStages" : [ {
    "name" : "unittest_setUpClass_fixture_Test_CompanyOverview::0",
    "time" : {
      "start" : 1611669590733,
      "stop" : 1611669590733,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  } ],
  "labels" : [ {
    "name" : "parentSuite",
    "value" : "Tests"
  }, {
    "name" : "suite",
    "value" : "test_company_overview"
  }, {
    "name" : "subSuite",
    "value" : "Test_CompanyOverview"
  }, {
    "name" : "host",
    "value" : "san-ThinkPad-T480"
  }, {
    "name" : "thread",
    "value" : "289337-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "Tests.test_company_overview"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ ],
  "links" : [ ],
  "hidden" : true,
  "retry" : true,
  "extra" : {
    "categories" : [ ],
    "tags" : [ ]
  },
  "source" : "7f699c3b29ccbcea.json",
  "parameterValues" : [ ]
}