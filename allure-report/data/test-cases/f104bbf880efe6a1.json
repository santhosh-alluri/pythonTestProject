{
  "uid" : "f104bbf880efe6a1",
  "name" : "test_time_series_daily",
  "fullName" : "Tests.test_time_series_daily.Test_TimeSeriesDaily#test_time_series_daily",
  "historyId" : "f72e9e8460fdc3c3945b05f1e3d0d240",
  "time" : {
    "start" : 1611599808089,
    "stop" : 1611599809037,
    "duration" : 948
  },
  "status" : "broken",
  "statusMessage" : "KeyError: 'Meta Data'",
  "statusTrace" : "self = <test_time_series_daily.Test_TimeSeriesDaily testMethod=test_time_series_daily>\n\n    def test_time_series_daily(self):\n        self.logger.info(\"test started\")\n        url = self.base_url+\"function=TIME_SERIES_DAILY&symbol=\"+self.symbol+\"&apikey=\"+self.apiKey\n        response = requests.get(url)\n        response_json = response.json()\n    \n        self.logger.info(\"response : \"+ response.text)\n    \n        # verify status code\n        self.soft_assert(self.assertEqual, response.status_code, 200,\n                         msg=\"Expected status code is 200 but found \"+str(response.status_code))\n    \n        # header validation\n        self.soft_assert(self.assertEqual, response.headers.get('Content-Type'), \"application/json\",\n                         msg=\"Expected Content-Type is application/json but found \"+ response.headers.get('Content-Type'))\n    \n        # symbol validation\n>       self.soft_assert(self.assertEqual, response_json['Meta Data']['2. Symbol'] , \"IBM\",\n                         msg=\"Expected symbol is IBM but found \"+ response_json['Meta Data']['2. Symbol'])\nE       KeyError: 'Meta Data'\n\nTests/test_time_series_daily.py:34: KeyError",
  "flaky" : false,
  "newFailed" : false,
  "beforeStages" : [ {
    "name" : "unittest_setUpClass_fixture_Test_TimeSeriesDaily",
    "time" : {
      "start" : 1611599808087,
      "stop" : 1611599808088,
      "duration" : 1
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  } ],
  "testStage" : {
    "status" : "broken",
    "statusMessage" : "KeyError: 'Meta Data'",
    "statusTrace" : "self = <test_time_series_daily.Test_TimeSeriesDaily testMethod=test_time_series_daily>\n\n    def test_time_series_daily(self):\n        self.logger.info(\"test started\")\n        url = self.base_url+\"function=TIME_SERIES_DAILY&symbol=\"+self.symbol+\"&apikey=\"+self.apiKey\n        response = requests.get(url)\n        response_json = response.json()\n    \n        self.logger.info(\"response : \"+ response.text)\n    \n        # verify status code\n        self.soft_assert(self.assertEqual, response.status_code, 200,\n                         msg=\"Expected status code is 200 but found \"+str(response.status_code))\n    \n        # header validation\n        self.soft_assert(self.assertEqual, response.headers.get('Content-Type'), \"application/json\",\n                         msg=\"Expected Content-Type is application/json but found \"+ response.headers.get('Content-Type'))\n    \n        # symbol validation\n>       self.soft_assert(self.assertEqual, response_json['Meta Data']['2. Symbol'] , \"IBM\",\n                         msg=\"Expected symbol is IBM but found \"+ response_json['Meta Data']['2. Symbol'])\nE       KeyError: 'Meta Data'\n\nTests/test_time_series_daily.py:34: KeyError",
    "steps" : [ ],
    "attachments" : [ {
      "uid" : "f1c7ea4a17bedaf2",
      "name" : "log",
      "source" : "f1c7ea4a17bedaf2.txt",
      "type" : "text/plain",
      "size" : 364
    } ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 1,
    "shouldDisplayMessage" : true,
    "hasContent" : true
  },
  "afterStages" : [ {
    "name" : "unittest_setUpClass_fixture_Test_TimeSeriesDaily::0",
    "time" : {
      "start" : 1611599811267,
      "stop" : 1611599811268,
      "duration" : 1
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  } ],
  "labels" : [ {
    "name" : "parentSuite",
    "value" : "Tests"
  }, {
    "name" : "suite",
    "value" : "test_time_series_daily"
  }, {
    "name" : "subSuite",
    "value" : "Test_TimeSeriesDaily"
  }, {
    "name" : "host",
    "value" : "san-ThinkPad-T480"
  }, {
    "name" : "thread",
    "value" : "227776-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "Tests.test_time_series_daily"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ {
      "uid" : "bc0d07590c6e7cd2",
      "status" : "passed",
      "time" : {
        "start" : 1611595310610,
        "stop" : 1611595312038,
        "duration" : 1428
      }
    }, {
      "uid" : "65b5d8612f49e474",
      "status" : "passed",
      "time" : {
        "start" : 1611594076581,
        "stop" : 1611594078081,
        "duration" : 1500
      }
    }, {
      "uid" : "51ef9625f350ab13",
      "status" : "passed",
      "time" : {
        "start" : 1611593742848,
        "stop" : 1611593744366,
        "duration" : 1518
      }
    }, {
      "uid" : "e20333e72e948aad",
      "status" : "passed",
      "time" : {
        "start" : 1611593671451,
        "stop" : 1611593672819,
        "duration" : 1368
      }
    }, {
      "uid" : "acdd49f9964b16a0",
      "status" : "passed",
      "time" : {
        "start" : 1611592253250,
        "stop" : 1611592254679,
        "duration" : 1429
      }
    }, {
      "uid" : "173c32fd7cd83a3f",
      "status" : "passed",
      "time" : {
        "start" : 1611592160195,
        "stop" : 1611592161547,
        "duration" : 1352
      }
    }, {
      "uid" : "d465b6ce0f9ede71",
      "status" : "failed",
      "statusDetails" : "AssertionError: ++++ soft assert failure details follow below ++++\n\n++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++\nThe following failure was found in \"test_time_series_daily\" (test_time_series_daily.Test_TimeSeriesDaily):\n+----------------------+----------------------+----------------------+\nTraceback (most recent call last):\n  File \"/home/san/PycharmProjects/pythonTestProject/Tests/test_time_series_daily.py\", line 48, in test_time_series_daily\n    self.soft_assert(self.assertTrue, False,\n  File \"/home/san/PycharmProjects/pythonTestProject/Tests/test_time_series_daily.py\", line 45, in test_time_series_daily\n    validate(instance=response_json, schema=content)\n  File \"/home/san/.local/lib/python3.8/site-packages/jsonschema/validators.py\", line 934, in validate\n    raise error\njsonschema.exceptions.ValidationError: 'abcd' is a required property\n\nFailed validating 'required' in schema['properties']['Meta Data']:\n    {'properties': {'1. Information': {'type': 'string'},\n                    '2. Symbol': {'type': 'string'},\n                    '3. Last Refreshed': {'type': 'string'},\n                    '4. Output Size': {'type': 'string'},\n                    '5. Time Zone': {'type': 'string'}},\n     'required': ['abcd'],\n     'type': 'object'}\n\nOn instance['Meta Data']:\n    {'1. Information': 'Daily Prices (open, high, low, close) and Volumes',\n     '2. Symbol': 'IBM',\n     '3. Last Refreshed': '2021-01-22',\n     '4. Output Size': 'Compact',\n     '5. Time Zone': 'US/Eastern'}\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File \"/home/san/.local/lib/python3.8/site-packages/softest/case.py\", line 62, in soft_assert\n    assert_method(*arguments, **keywords)\n  File \"/usr/lib/python3.8/unittest/case.py\", line 765, in assertTrue\n    raise self.failureException(msg)\nAssertionError: False is not true : 'abcd' is a required property\n\nFailed validating 'required' in schema['properties']['Meta Data']:\n    {'properties': {'1. Information': {'type': 'string'},\n                    '2. Symbol': {'type': 'string'},\n                    '3. Last Refreshed': {'type': 'string'},\n                    '4. Output Size': {'type': 'string'},\n                    '5. Time Zone': {'type': 'string'}},\n     'required': ['abcd'],\n     'type': 'object'}\n\nOn instance['Meta Data']:\n    {'1. Information': 'Daily Prices (open, high, low, close) and Volumes',\n     '2. Symbol': 'IBM',\n     '3. Last Refreshed': '2021-01-22',\n     '4. Output Size': 'Compact',\n     '5. Time Zone': 'US/Eastern'}\n\n-+ [1/1] +-",
      "time" : {
        "start" : 1611591945224,
        "stop" : 1611591946760,
        "duration" : 1536
      }
    }, {
      "uid" : "399fd044cd3c0867",
      "status" : "passed",
      "time" : {
        "start" : 1611589189555,
        "stop" : 1611589190288,
        "duration" : 733
      }
    }, {
      "uid" : "34d3c5a233c03cdf",
      "status" : "failed",
      "statusDetails" : "AssertionError: ++++ soft assert failure details follow below ++++\n\n++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++\nThe following 2 failures were found in \"test_time_series_daily\" (test_time_series_daily.Test_TimeSeriesDaily):\n+----------------------+----------------------+----------------------+\n Failure 1 (\"test_time_series_daily\" method)\n+----------------------+----------------------+----------------------+\nTraceback (most recent call last):\n  File \"/home/san/PycharmProjects/pythonTestProject/Tests/test_time_series_daily.py\", line 22, in test_time_series_daily\n    self.soft_assert(self.assertEqual,response.status_code,201, msg = \"Expected status code is 200 but found \"+str(response.status_code))\n  File \"/home/san/.local/lib/python3.8/site-packages/softest/case.py\", line 62, in soft_assert\n    assert_method(*arguments, **keywords)\n  File \"/usr/lib/python3.8/unittest/case.py\", line 912, in assertEqual\n    assertion_func(first, second, msg=msg)\n  File \"/usr/lib/python3.8/unittest/case.py\", line 905, in _baseAssertEqual\n    raise self.failureException(msg)\nAssertionError: 200 != 201 : Expected status code is 200 but found 200\n\n-+ [1/2] +-\n\n+----------------------+----------------------+----------------------+\n Failure 2 (\"test_time_series_daily\" method)\n+----------------------+----------------------+----------------------+\nTraceback (most recent call last):\n  File \"/home/san/PycharmProjects/pythonTestProject/Tests/test_time_series_daily.py\", line 25, in test_time_series_daily\n    self.soft_assert(self.assertEqual,response.headers.get('Content-Type'), \"applicationn/json\",  msg=\"Expected Content-Type is application/json but found \"+ response.headers.get('Content-Type'))\n  File \"/home/san/.local/lib/python3.8/site-packages/softest/case.py\", line 62, in soft_assert\n    assert_method(*arguments, **keywords)\n  File \"/usr/lib/python3.8/unittest/case.py\", line 912, in assertEqual\n    assertion_func(first, second, msg=msg)\n  File \"/usr/lib/python3.8/unittest/case.py\", line 1292, in assertMultiLineEqual\n    self.fail(self._formatMessage(msg, standardMsg))\n  File \"/usr/lib/python3.8/unittest/case.py\", line 753, in fail\n    raise self.failureException(msg)\nAssertionError: 'application/json' != 'applicationn/json'\n- application/json\n+ applicationn/json\n?            +\n : Expected Content-Type is application/json but found application/json\n\n-+ [2/2] +-",
      "time" : {
        "start" : 1611589097073,
        "stop" : 1611589098482,
        "duration" : 1409
      }
    }, {
      "uid" : "cc0737afd339f5c8",
      "status" : "broken",
      "statusDetails" : "TypeError: can only concatenate str (not \"dict\") to str",
      "time" : {
        "start" : 1611589021852,
        "stop" : 1611589023302,
        "duration" : 1450
      }
    }, {
      "uid" : "4476ae5bcfa2c003",
      "status" : "failed",
      "statusDetails" : "AssertionError: ++++ soft assert failure details follow below ++++\n\n++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++\nThe following 2 failures were found in \"test_time_series_daily\" (test_time_series_daily.Test_TimeSeriesDaily):\n+----------------------+----------------------+----------------------+\n Failure 1 (\"test_time_series_daily\" method)\n+----------------------+----------------------+----------------------+\nTraceback (most recent call last):\n  File \"/home/san/PycharmProjects/pythonTestProject/Tests/test_time_series_daily.py\", line 20, in test_time_series_daily\n    self.soft_assert(self.assertEqual,response.status_code,201, msg = \"Expected status code is 200 but found \"+str(response.status_code))\n  File \"/home/san/.local/lib/python3.8/site-packages/softest/case.py\", line 62, in soft_assert\n    assert_method(*arguments, **keywords)\n  File \"/usr/lib/python3.8/unittest/case.py\", line 912, in assertEqual\n    assertion_func(first, second, msg=msg)\n  File \"/usr/lib/python3.8/unittest/case.py\", line 905, in _baseAssertEqual\n    raise self.failureException(msg)\nAssertionError: 200 != 201 : Expected status code is 200 but found 200\n\n-+ [1/2] +-\n\n+----------------------+----------------------+----------------------+\n Failure 2 (\"test_time_series_daily\" method)\n+----------------------+----------------------+----------------------+\nTraceback (most recent call last):\n  File \"/home/san/PycharmProjects/pythonTestProject/Tests/test_time_series_daily.py\", line 23, in test_time_series_daily\n    self.soft_assert(self.assertEqual,response.headers.get('Content-Type'), \"applicationn/json\",  msg=\"Expected Content-Type is application/json but found \"+ response.headers.get('Content-Type'))\n  File \"/home/san/.local/lib/python3.8/site-packages/softest/case.py\", line 62, in soft_assert\n    assert_method(*arguments, **keywords)\n  File \"/usr/lib/python3.8/unittest/case.py\", line 912, in assertEqual\n    assertion_func(first, second, msg=msg)\n  File \"/usr/lib/python3.8/unittest/case.py\", line 1292, in assertMultiLineEqual\n    self.fail(self._formatMessage(msg, standardMsg))\n  File \"/usr/lib/python3.8/unittest/case.py\", line 753, in fail\n    raise self.failureException(msg)\nAssertionError: 'application/json' != 'applicationn/json'\n- application/json\n+ applicationn/json\n?            +\n : Expected Content-Type is application/json but found application/json\n\n-+ [2/2] +-",
      "time" : {
        "start" : 1611588262747,
        "stop" : 1611588264175,
        "duration" : 1428
      }
    } ],
    "categories" : [ {
      "name" : "Test defects",
      "matchedStatuses" : [ ],
      "flaky" : false
    } ],
    "tags" : [ ]
  },
  "source" : "f104bbf880efe6a1.json",
  "parameterValues" : [ ]
}