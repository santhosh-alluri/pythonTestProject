{
  "uid" : "19ad6b0bf6e38f86",
  "name" : "test_time_series_daily",
  "fullName" : "Tests.test_time_series_daily.Test_TimeSeriesDaily#test_time_series_daily",
  "historyId" : "f72e9e8460fdc3c3945b05f1e3d0d240",
  "time" : {
    "start" : 1611644698996,
    "stop" : 1611644700363,
    "duration" : 1367
  },
  "status" : "broken",
  "statusMessage" : "TypeError: assert_equal() got an unexpected keyword argument 'msg'",
  "statusTrace" : "self = <test_time_series_daily.Test_TimeSeriesDaily testMethod=test_time_series_daily>\n\n    def test_time_series_daily(self):\n        self.logger.info(\"test started\")\n        url = self.base_url+\"function=TIME_SERIES_DAILY&symbol=\"+self.symbol+\"&apikey=\"+self.apiKey\n        self.logger.info(\"url : \" + url)\n        response = requests.get(url)\n        response_json = response.json()\n    \n        self.logger.info(\"response : \"+ response.text)\n    \n        # verify status code\n>       self.assertion.assert_equal(self.assertEqual, response.status_code, 202,\n                         msg=\"Expected status code is 200 but found \"+str(response.status_code))\nE       TypeError: assert_equal() got an unexpected keyword argument 'msg'\n\nTests/test_time_series_daily.py:22: TypeError",
  "flaky" : false,
  "newFailed" : false,
  "beforeStages" : [ {
    "name" : "unittest_setUpClass_fixture_Test_TimeSeriesDaily",
    "time" : {
      "start" : 1611644698995,
      "stop" : 1611644698995,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  } ],
  "testStage" : {
    "status" : "broken",
    "statusMessage" : "TypeError: assert_equal() got an unexpected keyword argument 'msg'",
    "statusTrace" : "self = <test_time_series_daily.Test_TimeSeriesDaily testMethod=test_time_series_daily>\n\n    def test_time_series_daily(self):\n        self.logger.info(\"test started\")\n        url = self.base_url+\"function=TIME_SERIES_DAILY&symbol=\"+self.symbol+\"&apikey=\"+self.apiKey\n        self.logger.info(\"url : \" + url)\n        response = requests.get(url)\n        response_json = response.json()\n    \n        self.logger.info(\"response : \"+ response.text)\n    \n        # verify status code\n>       self.assertion.assert_equal(self.assertEqual, response.status_code, 202,\n                         msg=\"Expected status code is 200 but found \"+str(response.status_code))\nE       TypeError: assert_equal() got an unexpected keyword argument 'msg'\n\nTests/test_time_series_daily.py:22: TypeError",
    "steps" : [ ],
    "attachments" : [ {
      "uid" : "7e34f02bcf1ade36",
      "name" : "log",
      "source" : "7e34f02bcf1ade36.txt",
      "type" : "text/plain",
      "size" : 21574
    } ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 1,
    "shouldDisplayMessage" : true,
    "hasContent" : true
  },
  "afterStages" : [ {
    "name" : "unittest_setUpClass_fixture_Test_TimeSeriesDaily::0",
    "time" : {
      "start" : 1611644703348,
      "stop" : 1611644703348,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  } ],
  "labels" : [ {
    "name" : "parentSuite",
    "value" : "Tests"
  }, {
    "name" : "suite",
    "value" : "test_time_series_daily"
  }, {
    "name" : "subSuite",
    "value" : "Test_TimeSeriesDaily"
  }, {
    "name" : "host",
    "value" : "san-ThinkPad-T480"
  }, {
    "name" : "thread",
    "value" : "267155-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "Tests.test_time_series_daily"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ ],
  "links" : [ ],
  "hidden" : true,
  "retry" : true,
  "extra" : {
    "categories" : [ ],
    "tags" : [ ]
  },
  "source" : "19ad6b0bf6e38f86.json",
  "parameterValues" : [ ]
}