{
  "uid" : "d741c4a01ba5823a",
  "name" : "test_company_overview_invalid_apiToken_and_symbol",
  "fullName" : "Tests.test_company_overview.Test_CompanyOverview#test_company_overview_invalid_apiToken_and_symbol",
  "historyId" : "b25625a76e2e482e67cafde7387a3afe",
  "time" : {
    "start" : 1611670359666,
    "stop" : 1611670360786,
    "duration" : 1120
  },
  "status" : "passed",
  "flaky" : false,
  "newFailed" : false,
  "beforeStages" : [ {
    "name" : "unittest_setUpClass_fixture_Test_CompanyOverview",
    "time" : {
      "start" : 1611670358436,
      "stop" : 1611670358436,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  } ],
  "testStage" : {
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ {
      "uid" : "9638b74916bc736c",
      "name" : "log",
      "source" : "9638b74916bc736c.txt",
      "type" : "text/plain",
      "size" : 390
    } ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 1,
    "shouldDisplayMessage" : false,
    "hasContent" : true
  },
  "afterStages" : [ {
    "name" : "unittest_setUpClass_fixture_Test_CompanyOverview::0",
    "time" : {
      "start" : 1611670363247,
      "stop" : 1611670363247,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  } ],
  "labels" : [ {
    "name" : "tag",
    "value" : "@pytest.mark.skipif(False, reason='skipping because flag is set to false in excel')"
  }, {
    "name" : "parentSuite",
    "value" : "Tests"
  }, {
    "name" : "suite",
    "value" : "test_company_overview"
  }, {
    "name" : "subSuite",
    "value" : "Test_CompanyOverview"
  }, {
    "name" : "host",
    "value" : "san-ThinkPad-T480"
  }, {
    "name" : "thread",
    "value" : "291421-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "Tests.test_company_overview"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ {
      "uid" : "9ac52548b041a644",
      "status" : "skipped",
      "statusDetails" : "Skipped: skipping because flag is set to false in excel",
      "time" : {
        "start" : 1611669793150,
        "stop" : 1611669793150,
        "duration" : 0
      }
    }, {
      "uid" : "66ab407f4a3fccdd",
      "status" : "skipped",
      "statusDetails" : "Skipped: skipping because flag is set to false in excel",
      "time" : {
        "start" : 1611669739817,
        "stop" : 1611669739817,
        "duration" : 0
      }
    }, {
      "uid" : "6841cb5ffb3025ef",
      "status" : "passed",
      "time" : {
        "start" : 1611669647561,
        "stop" : 1611669648681,
        "duration" : 1120
      }
    }, {
      "uid" : "2bd2a923400f04aa",
      "status" : "passed",
      "time" : {
        "start" : 1611669629160,
        "stop" : 1611669630256,
        "duration" : 1096
      }
    }, {
      "uid" : "6400527935f621ac",
      "status" : "passed",
      "time" : {
        "start" : 1611669586408,
        "stop" : 1611669587553,
        "duration" : 1145
      }
    }, {
      "uid" : "db9a92dd1f7c9ff2",
      "status" : "passed",
      "time" : {
        "start" : 1611669551422,
        "stop" : 1611669552527,
        "duration" : 1105
      }
    }, {
      "uid" : "b9aabc3393a5507e",
      "status" : "failed",
      "statusDetails" : "AssertionError: ++++ soft assert failure details follow below ++++\n\n++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++\nThe following failure was found in \"test_company_overview_invalid_apiToken_and_symbol\" (test_company_overview.Test_CompanyOverview):\n+----------------------+----------------------+----------------------+\nTraceback (most recent call last):\n  File \"/home/san/PycharmProjects/pythonTestProject/Lib/Assertions.py\", line 9, in assert_equal\n    self.soft_assert(self.assertEqual, actual, expected,\n  File \"/home/san/PycharmProjects/pythonTestProject/Tests/test_company_overview.py\", line 63, in test_company_overview_invalid_apiToken_and_symbol\n    self.assertion.assert_equal(response_json,\n  File \"/home/san/.local/lib/python3.8/site-packages/softest/case.py\", line 62, in soft_assert\n    assert_method(*arguments, **keywords)\n  File \"/usr/lib/python3.8/unittest/case.py\", line 912, in assertEqual\n    assertion_func(first, second, msg=msg)\n  File \"/usr/lib/python3.8/unittest/case.py\", line 1211, in assertDictEqual\n    self.fail(self._formatMessage(msg, standardMsg))\n  File \"/usr/lib/python3.8/unittest/case.py\", line 753, in fail\n    raise self.failureException(msg)\nAssertionError: {'Note': 'Thank you for using Alpha Vantag[183 chars]cy.'} != {}\n+ {}\n- {'Note': 'Thank you for using Alpha Vantage! Our standard API call frequency '\n-          'is 5 calls per minute and 500 calls per day. Please visit '\n-          'https://www.alphavantage.co/premium/ if you would like to target a '\n-          'higher API call frequency.'} : response not meeted expected error{\"Note\": \"Thank you for using Alpha Vantage! Our standard API call frequency is 5 calls per minute and 500 calls per day. Please visit https://www.alphavantage.co/premium/ if you would like to target a higher API call frequency.\"}\n\n-+ [1/1] +-",
      "time" : {
        "start" : 1611669520552,
        "stop" : 1611669520901,
        "duration" : 349
      }
    }, {
      "uid" : "fd63a7a588968074",
      "status" : "passed",
      "time" : {
        "start" : 1611669503188,
        "stop" : 1611669503576,
        "duration" : 388
      }
    }, {
      "uid" : "ca3746ccbb362180",
      "status" : "passed",
      "time" : {
        "start" : 1611669475101,
        "stop" : 1611669476338,
        "duration" : 1237
      }
    }, {
      "uid" : "82b4166cc4b4af44",
      "status" : "passed",
      "time" : {
        "start" : 1611669385862,
        "stop" : 1611669387049,
        "duration" : 1187
      }
    }, {
      "uid" : "7d42ab00ec40fda",
      "status" : "passed",
      "time" : {
        "start" : 1611669180507,
        "stop" : 1611669181728,
        "duration" : 1221
      }
    }, {
      "uid" : "cbb6ea5e3290d68e",
      "status" : "passed",
      "time" : {
        "start" : 1611669025704,
        "stop" : 1611669026790,
        "duration" : 1086
      }
    }, {
      "uid" : "92388c256efc6797",
      "status" : "passed",
      "time" : {
        "start" : 1611668896078,
        "stop" : 1611668897253,
        "duration" : 1175
      }
    }, {
      "uid" : "372637d43197ee9a",
      "status" : "passed",
      "time" : {
        "start" : 1611668768440,
        "stop" : 1611668769733,
        "duration" : 1293
      }
    }, {
      "uid" : "64888c83470321ba",
      "status" : "passed",
      "time" : {
        "start" : 1611645966572,
        "stop" : 1611645967590,
        "duration" : 1018
      }
    }, {
      "uid" : "e7686138dc700345",
      "status" : "passed",
      "time" : {
        "start" : 1611645749302,
        "stop" : 1611645750485,
        "duration" : 1183
      }
    }, {
      "uid" : "b722cf8ab7fbfd49",
      "status" : "passed",
      "time" : {
        "start" : 1611645673525,
        "stop" : 1611645674605,
        "duration" : 1080
      }
    }, {
      "uid" : "a0b866fa0c793bdd",
      "status" : "broken",
      "statusDetails" : "TypeError: assert_equal() got an unexpected keyword argument 'msg'",
      "time" : {
        "start" : 1611645614863,
        "stop" : 1611645615934,
        "duration" : 1071
      }
    }, {
      "uid" : "42be1ee2d423e745",
      "status" : "passed",
      "time" : {
        "start" : 1611644591785,
        "stop" : 1611644592960,
        "duration" : 1175
      }
    }, {
      "uid" : "8c2633abe140170a",
      "status" : "passed",
      "time" : {
        "start" : 1611644579140,
        "stop" : 1611644579715,
        "duration" : 575
      }
    }, {
      "uid" : "1c1752fd22ffe3bd",
      "status" : "passed",
      "time" : {
        "start" : 1611644520466,
        "stop" : 1611644521690,
        "duration" : 1224
      }
    }, {
      "uid" : "4d379f3fa752be80",
      "status" : "passed",
      "time" : {
        "start" : 1611644468497,
        "stop" : 1611644469672,
        "duration" : 1175
      }
    }, {
      "uid" : "5b5ce95e360fb277",
      "status" : "passed",
      "time" : {
        "start" : 1611644447467,
        "stop" : 1611644448913,
        "duration" : 1446
      }
    }, {
      "uid" : "e75233a232a75ae6",
      "status" : "passed",
      "time" : {
        "start" : 1611643856074,
        "stop" : 1611643857132,
        "duration" : 1058
      }
    }, {
      "uid" : "f4308fbf72ab635a",
      "status" : "passed",
      "time" : {
        "start" : 1611643709436,
        "stop" : 1611643710674,
        "duration" : 1238
      }
    }, {
      "uid" : "ba7c3f84e7166ebe",
      "status" : "passed",
      "time" : {
        "start" : 1611643595705,
        "stop" : 1611643596794,
        "duration" : 1089
      }
    }, {
      "uid" : "607c5f9922312cf3",
      "status" : "passed",
      "time" : {
        "start" : 1611643491516,
        "stop" : 1611643492585,
        "duration" : 1069
      }
    }, {
      "uid" : "c3afef6049ac3f1a",
      "status" : "passed",
      "time" : {
        "start" : 1611643313912,
        "stop" : 1611643315197,
        "duration" : 1285
      }
    }, {
      "uid" : "1c96422d63e54f26",
      "status" : "passed",
      "time" : {
        "start" : 1611643027388,
        "stop" : 1611643028481,
        "duration" : 1093
      }
    }, {
      "uid" : "d40decad8fa9c229",
      "status" : "passed",
      "time" : {
        "start" : 1611603737447,
        "stop" : 1611603738547,
        "duration" : 1100
      }
    }, {
      "uid" : "b919897f3a22377f",
      "status" : "passed",
      "time" : {
        "start" : 1611603635232,
        "stop" : 1611603636563,
        "duration" : 1331
      }
    }, {
      "uid" : "2ef294d39f8e9af3",
      "status" : "passed",
      "time" : {
        "start" : 1611602494303,
        "stop" : 1611602495403,
        "duration" : 1100
      }
    }, {
      "uid" : "2883d905df20f3b9",
      "status" : "passed",
      "time" : {
        "start" : 1611599795196,
        "stop" : 1611599796302,
        "duration" : 1106
      }
    }, {
      "uid" : "f2b5fa2cb4386694",
      "status" : "passed",
      "time" : {
        "start" : 1611598373555,
        "stop" : 1611598374766,
        "duration" : 1211
      }
    }, {
      "uid" : "5b4b561644349954",
      "status" : "broken",
      "statusDetails" : "TypeError: can only concatenate str (not \"dict\") to str",
      "time" : {
        "start" : 1611598316655,
        "stop" : 1611598317829,
        "duration" : 1174
      }
    } ],
    "categories" : [ ],
    "tags" : [ "@pytest.mark.skipif(False, reason='skipping because flag is set to false in excel')" ]
  },
  "source" : "d741c4a01ba5823a.json",
  "parameterValues" : [ ]
}