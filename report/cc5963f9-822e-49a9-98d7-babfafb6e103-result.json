{"name": "test_global_quote", "status": "broken", "statusDetails": {"message": "TypeError: assert_equal() got an unexpected keyword argument 'msg'", "trace": "self = <test_global_quote.Test_GlobalQuote testMethod=test_global_quote>\n\n    def test_global_quote(self):\n        self.logger.info(\"test started\")\n        url = self.base_url+\"function=GLOBAL_QUOTE&symbol=\"+self.symbol+\"&apikey=\"+self.apiKey\n        self.logger.info(\"url : \" + url)\n        response = requests.get(url)\n        response_json = response.json()\n    \n        self.logger.info(\"response : \"+ response.text)\n    \n        # verify status code\n        self.assertion.assert_equal(response.status_code, 200,\n                         \"Expected status code is 200 but found \"+str(response.status_code))\n    \n        # header validation\n>       self.assertion.assert_equal(response.headers.get('Content-Type'), \"application/json\",\n                         msg=\"Expected Content-Type is application/json but found \"+ response.headers.get('Content-Type'))\nE       TypeError: assert_equal() got an unexpected keyword argument 'msg'\n\nTests/test_global_quote.py:25: TypeError"}, "attachments": [{"name": "log", "source": "2b0d5ade-368e-4e71-b835-a1529356ad8c-attachment.txt", "type": "text/plain"}], "start": 1611645533902, "stop": 1611645535185, "uuid": "288b2d07-98e9-4ab6-87aa-ea1573895547", "historyId": "a4f0e8f6c95eaf1d767849de5f25c711", "testCaseId": "0b5bd4cb41c871735eac7171e6ffcbb7", "fullName": "Tests.test_global_quote.Test_GlobalQuote#test_global_quote", "labels": [{"name": "parentSuite", "value": "Tests"}, {"name": "suite", "value": "test_global_quote"}, {"name": "subSuite", "value": "Test_GlobalQuote"}, {"name": "host", "value": "san-ThinkPad-T480"}, {"name": "thread", "value": "268115-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "Tests.test_global_quote"}]}