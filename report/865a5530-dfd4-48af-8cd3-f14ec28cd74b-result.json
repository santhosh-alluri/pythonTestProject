{"name": "test_search_endpoint", "status": "failed", "statusDetails": {"message": "AssertionError: ++++ soft assert failure details follow below ++++\n\n++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++\nThe following failure was found in \"test_search_endpoint\" (test_search_endpoint.Test_CompanyOverview):\n+----------------------+----------------------+----------------------+\nTraceback (most recent call last):\n  File \"/home/san/PycharmProjects/pythonTestProject/Tests/test_search_endpoint.py\", line 34, in test_search_endpoint\n    self.soft_assert(self.assertTrue, \"IBM\" not in response_json['bestMatches'][0][\"1. symbol\"] ,\n  File \"/home/san/.local/lib/python3.8/site-packages/softest/case.py\", line 62, in soft_assert\n    assert_method(*arguments, **keywords)\n  File \"/usr/lib/python3.8/unittest/case.py\", line 765, in assertTrue\n    raise self.failureException(msg)\nAssertionError: False is not true : Expected symbol is IBM but found IBM\n\n-+ [1/1] +-", "trace": "self = <test_search_endpoint.Test_CompanyOverview testMethod=test_search_endpoint>\n\n    def test_search_endpoint(self):\n        self.logger.info(\"test started\")\n        url = self.base_url+\"function=SYMBOL_SEARCH&keywords=\"+self.symbol+\"&apikey=\"+self.apiKey\n        response = requests.get(url)\n        response_json = response.json()\n    \n        self.logger.info(\"response : \"+ response.text)\n    \n        # verify status code\n        self.soft_assert(self.assertEqual, response.status_code, 200,\n                         msg=\"Expected status code is 200 but found \"+str(response.status_code))\n    \n        # header validation\n        self.soft_assert(self.assertEqual, response.headers.get('Content-Type'), \"application/json\",\n                         msg=\"Expected Content-Type is application/json but found \"+ response.headers.get('Content-Type'))\n    \n        # symbol validation\n        self.soft_assert(self.assertTrue, \"IBM\" not in response_json['bestMatches'][0][\"1. symbol\"] ,\n                         msg=\"Expected symbol is IBM but found \"+ response_json['bestMatches'][0][\"1. symbol\"] )\n    \n        # response json schema validation\n        path = Path(__file__).parent.parent/\"Config/searchEndpointSchema.json\"\n        data = open(path).read()\n        content = json.loads(data)\n        try:\n            validate(instance=response_json, schema=content)\n        except jsonschema.exceptions.ValidationError as ve:\n            self.logger.info(\"error log\")\n            self.soft_assert(self.assertTrue, False,\n                             msg=ve)\n        self.logger.info(\"test ended\")\n>       self.assert_all()\n\nTests/test_search_endpoint.py:48: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n../../.local/lib/python3.8/site-packages/softest/case.py:139: in assert_all\n    self.fail(''.join(failure_output))\nE   AssertionError: ++++ soft assert failure details follow below ++++\nE   \nE   ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++\nE   The following failure was found in \"test_search_endpoint\" (test_search_endpoint.Test_CompanyOverview):\nE   +----------------------+----------------------+----------------------+\nE   Traceback (most recent call last):\nE     File \"/home/san/PycharmProjects/pythonTestProject/Tests/test_search_endpoint.py\", line 34, in test_search_endpoint\nE       self.soft_assert(self.assertTrue, \"IBM\" not in response_json['bestMatches'][0][\"1. symbol\"] ,\nE     File \"/home/san/.local/lib/python3.8/site-packages/softest/case.py\", line 62, in soft_assert\nE       assert_method(*arguments, **keywords)\nE     File \"/usr/lib/python3.8/unittest/case.py\", line 765, in assertTrue\nE       raise self.failureException(msg)\nE   AssertionError: False is not true : Expected symbol is IBM but found IBM\nE   \nE   -+ [1/1] +-"}, "attachments": [{"name": "log", "source": "9b775f0b-a80d-4be3-81f7-f7a8188c2247-attachment.txt", "type": "text/plain"}], "start": 1611599472472, "stop": 1611599473593, "uuid": "3f0b1df0-f2d8-4657-a649-17a5f2c554fc", "historyId": "97c45f1a6a19733b4c15331cb45bf6bd", "testCaseId": "24ae361bf929d7ad824ec14700a00f56", "fullName": "Tests.test_search_endpoint.Test_CompanyOverview#test_search_endpoint", "labels": [{"name": "parentSuite", "value": "Tests"}, {"name": "suite", "value": "test_search_endpoint"}, {"name": "subSuite", "value": "Test_CompanyOverview"}, {"name": "host", "value": "san-ThinkPad-T480"}, {"name": "thread", "value": "227412-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "Tests.test_search_endpoint"}]}